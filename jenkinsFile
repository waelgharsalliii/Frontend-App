pipeline {
    agent any

    stages {
        stage('Checkout Git') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins-front-ssh', url: 'git@github.com:waelgharsalliii/Frontend-App.git']])
            }
        }
         stage('Install dependencies') {
            steps {
                //// Install Node.js dependencies
                sh 'npm install'
            }
        }
    
    stage('Sonarqube'){
    steps { 
              nodejs (nodeJSInstallationName: 'NodeJs'){     
                    withSonarQubeEnv('sonar'){ 
                        sh 'npm run sonar' 
                    } 
                }
                      } 
  }
                      
         
     
       

                        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t waelgharsalli/frontend-pfe .'
                }
            }
        }

    stage('Login and Push to Docker Hub') {
            steps {
              script {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-cred', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'

                    // Push the Docker image
                    sh 'docker push waelgharsalli/frontend-pfe:latest'
                }
            }
        }
     }
    
                   stage('publish') {
            steps {                     
                /// Publish package to Nexus repository
                     withCredentials([file(credentialsId: 'nexus-front-cred', variable: 'mynpmrc')]) {

                         sh "npm publish --userconfig $mynpmrc --loglevel verbose"
                     }}}
    
       

    }
}
///////hjklhjk
